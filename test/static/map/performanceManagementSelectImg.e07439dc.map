{"version":3,"sources":["webpack:///./src/pages/select-image/style.scss","webpack:///./src/pages/select-image/index.tsx","webpack:///./src/components/EasyNarBar/EasyNarBar.tsx","webpack:///./src/components/EasyNarBar/index.tsx","webpack:///./src/components/EasyNarBar/style.scss"],"names":["require","BackButtonStyle","display","width","color","border","position","top","left","BatchDeleteIndexList","CheckboxItem","PerformanceManagementSelectImg","inject","observer","props","index","files","setState","currentIndex","showMultiple","urls","map","item","window","location","origin","url","history","SelectImageStore","propsFiles","uploading","state","pathname","pics","toJS","recurseEverything","push","docked","canAddPic","preview","apiWX","getWxApi","href","initStore","title","onFileChange","newFiles","goBack","disabled","makesure","onPreview","length","fail","React","Component","EasyNarBar","memo","leftContent","e","onLeftClick","rightContent","mainContent"],"mappings":"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","file":"static/js/performanceManagementSelectImg.7fc848a8.js","sourcesContent":["// extracted by mini-css-extract-plugin","import React from \"react\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport { ImagePicker, Button, Icon, Toast, List, Flex, Checkbox, Drawer, WhiteSpace, WingBlank } from \"antd-mobile\";\r\nimport { Gallery, GalleryDelete, Button as WeButton } from \"react-weui\";\r\nimport { getWxApi } from \"@/service/wx-api\";\r\nimport EasyNarBar from \"@/components/EasyNarBar\";\r\nimport classNames from \"classnames\";\r\nimport { toJS } from \"mobx\";\r\nrequire(\"./style.scss\");\r\n\r\nconst BackButtonStyle = {\r\n  display: \"inline-block\",\r\n  width: \"auto\",\r\n  color: \"white\",\r\n  border: \"none\",\r\n  position: \"absolute\",\r\n  top: \"5px\",\r\n  left: \"15px\"\r\n};\r\nlet BatchDeleteIndexList: any[] = [];\r\nconst CheckboxItem = Checkbox.CheckboxItem;\r\n@inject(\"SelectImageStore\")\r\n@observer\r\nclass PerformanceManagementSelectImg extends React.Component<IProps, GState> {\r\n  apiWX: any;\r\n  getWXApiFun: any;\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = { preview: false, docked: false, canAddPic: true };\r\n    this.apiWX = getWxApi(window.location.href);\r\n    this.state = {\r\n      currentIndex: 0\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {\r\n      location,\r\n      SelectImageStore: { initStore }\r\n    } = this.props;\r\n    initStore(location.state);\r\n  }\r\n  onPreview = (index: number, files: any[]) => {\r\n    // const previewImage = this.apiWX.media.previewImage.previewImage;\r\n    // previewImage({\r\n    //     current:\r\n    //         window.location.origin + files[this.state.currentIndex].url, // 当前显示图片的http链接\r\n    //     urls: files.map((item) => window.location.origin + item.url), // 需要预览的图片http链接列表\r\n    // });\r\n    this.setState({\r\n      currentIndex: index,\r\n      showMultiple: true,\r\n      urls: files.map(item => window.location.origin + item.url)\r\n    });\r\n  };\r\n  makesure = () => {\r\n    const {\r\n      history,\r\n      location,\r\n      SelectImageStore: { propsFiles, uploading }\r\n    } = this.props;\r\n\r\n    if (uploading) return;\r\n\r\n    const state = {\r\n      pathname: \"/select-image\",\r\n      index: location.state.index,\r\n      pics: toJS(propsFiles, { recurseEverything: true })\r\n    };\r\n    history.push({ pathname: location.state.pathname, state });\r\n  };\r\n  cancelBatchDelete = () => {\r\n    this.setState({ docked: false, canAddPic: true });\r\n    BatchDeleteIndexList = [];\r\n  };\r\n  render() {\r\n    const {\r\n      history,\r\n      SelectImageStore: { title, files, onFileChange, uploading },\r\n      location: { state }\r\n    } = this.props;\r\n    const { urls, currentIndex, showMultiple } = this.state;\r\n    const newFiles = toJS(files);\r\n    // const BatchDeleteList = () => {\r\n    //   return (\r\n    //     <div>\r\n    //       <List\r\n    //         renderHeader={() => {\r\n    //           \"批量删除\";\r\n    //         }}\r\n    //       >\r\n    //         {files.map((i: any, index: number) => (\r\n    //           <CheckboxItem\r\n    //             key={i.id}\r\n    //             onChange={(event: any) => {\r\n    //               if (!event.target.checked) {\r\n    //                 const deteleindex = BatchDeleteIndexList.findIndex(item => item === i.id);\r\n    //                 BatchDeleteIndexList.splice(deteleindex, 1);\r\n    //               } else {\r\n    //                 BatchDeleteIndexList.push(i.id);\r\n    //               }\r\n    //             }}\r\n    //             defaultChecked={true}\r\n    //           >\r\n    //             <img src={i.url}></img>\r\n    //           </CheckboxItem>\r\n    //         ))}\r\n    //       </List>\r\n    //       <WingBlank className=\"operationButton\">\r\n    //         <Button\r\n    //           className=\"BatchDeleteCancelButton\"\r\n    //           style={{ display: \"inline-block\" }}\r\n    //           size=\"small\"\r\n    //           onClick={() => {\r\n    //             this.cancelBatchDelete();\r\n    //           }}\r\n    //         >\r\n    //           取消\r\n    //         </Button>\r\n    //         <Button\r\n    //           type=\"primary\"\r\n    //           size=\"small\"\r\n    //           className=\"BatchDeleteButton\"\r\n    //           style={{ display: \"inline-block\" }}\r\n    //           onClick={() => {\r\n    //             BatchDelete(BatchDeleteIndexList);\r\n    //             this.cancelBatchDelete();\r\n    //           }}\r\n    //         >\r\n    //           删除\r\n    //         </Button>\r\n    //       </WingBlank>\r\n    //     </div>\r\n    //   );\r\n    // };\r\n    return (\r\n      <div className=\"meeting-selectRoom-page\">\r\n        <EasyNarBar\r\n          mainContent={title}\r\n          leftContent={<Icon type=\"left\" />}\r\n          onLeftClick={() => {\r\n            history.goBack();\r\n          }}\r\n          rightContent={\r\n            !state.disabled ? (\r\n              <Button type=\"primary\" size=\"small\" onClick={this.makesure} loading={uploading}>\r\n                {uploading ? \"上传中\" : \"确定\"}\r\n              </Button>\r\n            ) : (\r\n              \"\"\r\n            )\r\n          }\r\n        ></EasyNarBar>\r\n\r\n        <ImagePicker\r\n          files={newFiles}\r\n          onImageClick={this.onPreview}\r\n          onChange={onFileChange}\r\n          selectable={!state.disabled && newFiles.length < 5 && this.state.canAddPic}\r\n          length={3}\r\n          disableDelete={state.disabled ? state.disabled : false}\r\n          onFail={() => {\r\n            Toast.fail(\"选择失败\");\r\n          }}\r\n        />\r\n        {/* 批量删除 */}\r\n        {/* <WingBlank>\r\n          <Button\r\n            className={classNames({ nulFiles: newFiles.length == 0||state.disabled, hashfiles: newFiles.length != 0&&!state.disabled })}\r\n            style={{ float: \"right\" }}\r\n            size=\"small\"\r\n            type=\"ghost\"\r\n            onClick={() => {\r\n              BatchDeleteIndexList = newFiles.map((item: any) => {\r\n                return item.id;\r\n              });\r\n              this.setState({\r\n                docked: true,\r\n                canAddPic: false\r\n              });\r\n            }}\r\n          >\r\n            批量删除\r\n          </Button>\r\n        </WingBlank> */}\r\n        {/* <div className={classNames({ pramiry: !this.state.docked, active: this.state.docked })}>\r\n          <BatchDeleteList></BatchDeleteList>\r\n        </div> */}\r\n        <Gallery defaultIndex={currentIndex} src={urls} show={showMultiple}>\r\n          <span className=\"meeting-selectImage-goBack\" onClick={() => this.setState({ showMultiple: false })}>\r\n            返回\r\n          </span>\r\n        </Gallery>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PerformanceManagementSelectImg;\r\n","/* eslint-disable react/display-name */\r\n/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport React, { memo } from \"react\";\r\nimport { NavBar, Icon } from \"antd-mobile\";\r\n\r\nconst EasyNarBar = memo((props: any) => {\r\n  return (\r\n    <>\r\n      <NavBar\r\n        mode=\"dark\"\r\n        leftContent={props.leftContent}\r\n        onLeftClick={e => {\r\n          props.onLeftClick && props.onLeftClick(e);\r\n        }}\r\n        rightContent={props.rightContent}\r\n      >\r\n        {props.mainContent}\r\n      </NavBar>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default EasyNarBar;\r\n","import React from \"react\";\r\n// import store from './store';\r\nimport EasyNarBar from './EasyNarBar';\r\nimport { observer } from \"mobx-react\";\r\nrequire('./style.scss');\r\n\r\nexport default observer((props) => {\r\n    return (\r\n        <EasyNarBar {...props} />\r\n    )\r\n});\r\n","// extracted by mini-css-extract-plugin"],"sourceRoot":""}